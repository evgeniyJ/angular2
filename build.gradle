buildscript {
    ext {
        springBootVersion = '1.5.1.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.moowork.gradle:gradle-node-plugin:1.1.1")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.moowork.node'
apply plugin: 'docker'

jar {
    baseName = 'angular2'
    version = '0.0.1'
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('io.springfox:springfox-swagger2:2.4.0')
    compile('io.springfox:springfox-swagger-ui:2.4.0')
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

task appNpmInstall(type: NpmTask) {
    description = "Installs dependencies from package.json"
    workingDir = file("${project.projectDir}/client")
    args = ['install']
}

task appLint(type: NpmTask, dependsOn: appNpmInstall) {
    description = "Verify UI"
    workingDir = file("${project.projectDir}/client")
    args = ['run', 'lint']
}

task appNpmBuild(type: NpmTask, dependsOn: appLint) {
    description = "Build UI"
    workingDir = file("${project.projectDir}/client")
    args = ['run', 'build']
}

build.dependsOn(appNpmBuild)

task buildDocker(type: Docker, dependsOn: build) {
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}